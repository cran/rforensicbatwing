// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// batwing_rcpp
Rcpp::List batwing_rcpp(Rcpp::IntegerMatrix data, int reps, int burnin, int treebetN, int Nbetsamp, Rcpp::CharacterVector mupriorsvec, int nmuprior, Rcpp::CharacterVector Nprior, Rcpp::Nullable<Rcpp::CharacterVector> alphaprior, bool forensicmode, bool progress, bool trace);
RcppExport SEXP _rforensicbatwing_batwing_rcpp(SEXP dataSEXP, SEXP repsSEXP, SEXP burninSEXP, SEXP treebetNSEXP, SEXP NbetsampSEXP, SEXP mupriorsvecSEXP, SEXP nmupriorSEXP, SEXP NpriorSEXP, SEXP alphapriorSEXP, SEXP forensicmodeSEXP, SEXP progressSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type reps(repsSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type treebetN(treebetNSEXP);
    Rcpp::traits::input_parameter< int >::type Nbetsamp(NbetsampSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type mupriorsvec(mupriorsvecSEXP);
    Rcpp::traits::input_parameter< int >::type nmuprior(nmupriorSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type Nprior(NpriorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::CharacterVector> >::type alphaprior(alphapriorSEXP);
    Rcpp::traits::input_parameter< bool >::type forensicmode(forensicmodeSEXP);
    Rcpp::traits::input_parameter< bool >::type progress(progressSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(batwing_rcpp(data, reps, burnin, treebetN, Nbetsamp, mupriorsvec, nmuprior, Nprior, alphaprior, forensicmode, progress, trace));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rforensicbatwing_batwing_rcpp", (DL_FUNC) &_rforensicbatwing_batwing_rcpp, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_rforensicbatwing(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
